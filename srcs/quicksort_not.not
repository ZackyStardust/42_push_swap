/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   quicksort.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: fpereira <fpereira@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/10 12:16:32 by fpereira          #+#    #+#             */
/*   Updated: 2023/02/10 12:26:05 by fpereira         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

void	quicksort(int *a, int *b, int start, int end)
{
	int pivot;
	
	if (start >= end)
		return ;
	pivot = partition(a, b, start, end);
	quicksort(a, b, start, pivot - 1);
	quicksort(a, b, pivot + 1, end);
}

int		partition(int *a, int *b, int start, int end)
{
	char *pivot;
	int i;
	int j;
	
	pivot = a[end];
	i = start - 1;
	j = 0;
	while (j <= end - 1)
	{
		if (a[j] <= pivot)
		{
			i++;
			if (i != j)
			{
				//sa
				//sb
				ft_printf("sa\nsb\n");
			}
			//pa
			//pb
			ft_printf("pa\npb\n");
		}
		j++;
	}
	if (a[end] < a[i + 1])
	{
		//sa
		//sb
		ft_printf("sa\nsb\n");
	}
	//pa
	//pb
	ft_printf("pa\npb\n");
	return (i + 1);
}
